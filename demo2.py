# from flask import Flask, request
# import requests

# app = Flask(__name__)

# TELEGRAM_BOT_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'
# CHAT_ID = '-4708928215'

# # Route ch√≠nh "/" ƒë·ªÉ x·ª≠ l√Ω y√™u c·∫ßu t·ª´ UptimeRobot
# @app.route('/')
# def index():
#     return "App is running!", 200  # Tr·∫£ v·ªÅ th√¥ng b√°o x√°c nh·∫≠n app ho·∫°t ƒë·ªông

# # Route "/webhook" ƒë·ªÉ x·ª≠ l√Ω y√™u c·∫ßu t·ª´ TradingView ho·∫∑c c√°c ngu·ªìn kh√°c
# @app.route('/webhook', methods=['POST', 'GET', 'HEAD'])
# def webhook():
#     # X·ª≠ l√Ω y√™u c·∫ßu POST (d√†nh cho webhook t·ª´ TradingView)
#     if request.method == 'POST':
#         try:
#             if request.is_json:
#                 data = request.get_json(force=True)
#             else:
#                 data = {"message": request.data.decode('utf-8')}  # Gi·∫£i m√£ text raw
#             print("Received data:", data)
#             message = data.get('message', 'No message received')
#         except Exception as e:
#             print("Error parsing JSON:", str(e))
#             return "Invalid JSON", 400

#         send_message_to_telegram(message)
#         return "Webhook received", 200

#     # X·ª≠ l√Ω y√™u c·∫ßu GET v√† HEAD (d√†nh cho UptimeRobot)
#     return "Webhook is running!", 200

# # H√†m g·ª≠i tin nh·∫Øn ƒë·∫øn Telegram
# def send_message_to_telegram(message):
#     url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
#     payload = {
#         'chat_id': CHAT_ID,
#         'text': message
#     }
#     response = requests.post(url, json=payload)
#     if response.status_code == 200:
#         print("Message sent successfully!")
#     else:
#         print(f"Failed to send message: {response.text}")

# if __name__ == '__main__':
#     app.run(port=5000)


# from flask import Flask, request
# import requests
# import threading
# import time

# app = Flask(__name__)

# # Token bot ch√≠nh v√† bot ph·ª•
# MAIN_BOT_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'
# SECONDARY_BOT_TOKEN = '7466054301:AAGexBfB5pNbwmnHP1ocC9jICxR__GSNgOA'
# CHAT_ID = '-4708928215'


# from flask import Flask, request
# import requests

# app = Flask(__name__)

# # Token c·ªßa 2 bot Telegram
# BOT1_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'  # Bot 1 nh·∫≠n t√≠n hi·ªáu LONG/SHORT
# BOT2_TOKEN = '7466054301:AAGexBfB5pNbwmnHP1ocC9jICxR__GSNgOA'  # Bot 2 nh·∫≠n t√≠n hi·ªáu ü•áü•à

# CHAT_ID = '-4708928215'  # ID nh√≥m Telegram nh·∫≠n tin nh·∫Øn

# @app.route('/')
# def index():
#     return "App is running!", 200

# @app.route('/webhook', methods=['POST', 'GET', 'HEAD'])
# def webhook():
#     if request.method == 'POST':
#         try:
#             if request.is_json:
#                 data = request.get_json(force=True)
#             else:
#                 data = {"message": request.data.decode('utf-8')}
#             print("Received data:", data)
#             message = data.get('message', 'No message received')
#         except Exception as e:
#             print("Error parsing JSON:", str(e))
#             return "Invalid JSON", 400

#         # Ph√¢n lo·∫°i tin nh·∫Øn ƒë·ªÉ g·ª≠i ƒë·∫øn bot ph√π h·ª£p
#         if "üöÄ LONG üöÄ" in message or "üö® SHORT üö®" in message:
#             send_message_to_telegram(BOT1_TOKEN, message)  # G·ª≠i Bot 1
#         elif "ü•á" in message or "ü•à" in message:
#             send_message_to_telegram(BOT2_TOKEN, message)  # G·ª≠i Bot 2

#         return "Webhook received", 200

#     return "Webhook is running!", 200

# def send_message_to_telegram(bot_token, message):
#     url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
#     payload = {
#         'chat_id': CHAT_ID,
#         'text': message
#     }
#     response = requests.post(url, json=payload)
#     if response.status_code == 200:
#         print("Message sent successfully!")
#     else:
#         print(f"Failed to send message: {response.text}")

# if __name__ == '__main__':
#     app.run(port=5000)



from flask import Flask, request
import requests
import time

app = Flask(__name__)

# M·∫∑c ƒë·ªãnh th√¥ng tin bot v√† chat ID
BOT1_TOKEN = '7637391486:AAEYarDrhPKUkWzsoteS3yiVgB5QeiZdKoI'  # Bot 1 nh·∫≠n t√≠n hi·ªáu LONG/SHORT
BOT2_TOKEN = '7466054301:AAGexBfB5pNbwmnHP1ocC9jICxR__GSNgOA'  # Bot 2 nh·∫≠n t√≠n hi·ªáu ü•áü•à
CHAT_ID = '-4708928215'  # ID nh√≥m Telegram nh·∫≠n tin nh·∫Øn

# H√†ng ƒë·ª£i tin nh·∫Øn
long_short_messages = []
medal_messages = []
last_sent_time = 0  # L∆∞u th·ªùi gian l·∫ßn g·ª≠i cu·ªëi
TIME_THRESHOLD = 3  # S·ªë gi√¢y t·ªëi thi·ªÉu gi·ªØa c√°c l·∫ßn g·ª≠i

@app.route('/')
def index():
    return "App is running!", 200

@app.route('/webhook', methods=['POST'])
def webhook():
    global last_sent_time

    try:
        if request.is_json:
            data = request.get_json(force=True)
        else:
            data = {"message": request.data.decode('utf-8')}
        print("Received data:", data)
        message = data.get('message', 'No message received')

        # X√°c ƒë·ªãnh lo·∫°i t√≠n hi·ªáu v√† ƒë∆∞a v√†o h√†ng ƒë·ª£i
        if "üöÄ LONG üöÄ" in message or "üö® SHORT üö®" in message:
            long_short_messages.append(message)
        elif "ü•á" in message or "ü•à" in message:
            medal_messages.append(message)

        # Ki·ªÉm tra th·ªùi gian g·ª≠i tin nh·∫Øn
        current_time = time.time()
        if current_time - last_sent_time >= TIME_THRESHOLD:
            send_combined_messages()
            last_sent_time = current_time  # C·∫≠p nh·∫≠t th·ªùi gian g·ª≠i

    except Exception as e:
        print("Error parsing JSON:", str(e))
        return "Invalid JSON", 400

    return "Webhook received", 200

def send_combined_messages():
    global long_short_messages, medal_messages

    # G·ª≠i tin nh·∫Øn t·ª´ Bot 1 (LONG/SHORT) n·∫øu c√≥
    if long_short_messages:
        send_message_to_telegram(BOT1_TOKEN, "\n".join(long_short_messages))
        long_short_messages.clear()  # X√≥a sau khi g·ª≠i

    # G·ª≠i tin nh·∫Øn t·ª´ Bot 2 (Hu√¢n ch∆∞∆°ng ü•áü•à) n·∫øu c√≥
    if medal_messages:
        send_message_to_telegram(BOT2_TOKEN, "\n".join(medal_messages))
        medal_messages.clear()  # X√≥a sau khi g·ª≠i

def send_message_to_telegram(bot_token, message):
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {'chat_id': CHAT_ID, 'text': message}
    response = requests.post(url, json=payload)
    
    if response.status_code == 200:
        print(f"‚úÖ Message sent by {bot_token}:\n{message}")
    else:
        print(f"‚ùå Failed to send message: {response.text}")

if __name__ == '__main__':
    app.run(port=5000)
